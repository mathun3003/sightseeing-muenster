name: Code Style
on: [push, pull_request, release]

jobs:

  # Typing checking
  typing:
    name: MyPy
    runs-on: ubuntu-latest
    steps:
      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.x
          architecture: x64
          plugins : |
            pydantic.mypy
          ignore_missing_imports: true
      - name: "☁️ Checkout Repository"
        uses: actions/checkout@v3
      - name: "📦 Install mypy"
        run: pip install mypy
      - name: "🔍 Run mypy"
        uses: sasanquaneuf/mypy-github-action@releases/v1
        with:
          checkName: 'typing'   # NOTE: this needs to be the same as the job name
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Pep8
  pep8:
    name: PEP8
    runs-on: ubuntu-latest
    steps:
      - name: "☁️ Checkout Repository"
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: "🔍 Run PEP8"
        uses: quentinguidee/pep8-action@v1
        with:
          arguments: '--max-line-length=120'

  # Pylint checking
  pylint:
    name: Pylint
    runs-on: ubuntu-latest
    permissions:
      contents: read
    strategy:
      matrix:
        python-version: [ "3.10", "3.11" ]
    steps:
      - name: "☁️ Checkout Repository"
        uses: actions/checkout@v3
      - name: "🔧 Set up Python ${{ matrix.python-version }}"
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: "Install poetry"
        uses: snok/install-poetry@v1.3.4
        with:
          version: 1.3.2
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: "📦 Install dependencies"
        run: |
          poetry lock
          poetry install --no-interaction --no-root
      - name: "🔍 Lint Code"
        run: |
          poetry run pylint -d C0103,C0114,W1203,E0213,E1101 $(git ls-files '*.py')
        # disable: invalid-name, missing-module-docstring, logging-fstring-interpolation, no-self-argument, no-member

  # isort
  isort:
    name: isort
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: isort/isort-action@v1
        with:
          requirements-files: "pyproject.toml"

  # Formatting
  black:
    name: Black
    runs-on: ubuntu-latest
    steps:
      - name: "☁️ Checkout Repository"
        uses: actions/checkout@v3
      - name: "🔧 Autobuild"
        uses: actions/setup-python@v1
        with:
          python-version: 3.x
          line-length: 120
      - name: "Install poetry"
        uses: snok/install-poetry@v1.3.4
        with:
          version: 1.3.2
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: "🔍 Run Black"
        run: |
            poetry lock
            poetry install --no-interaction --no-root
            poetry run black --check --diff --verbose .
